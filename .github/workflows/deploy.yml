name: Deploy
on:
  push:
    branches:
      - master

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    name: Deploy API
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@1.3.0
        with:
          environment: production
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "./packages/api"
      - name: Create Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: api
        with:
          environment: production
          sourcemaps: "./packages/api/dist"
  deploy-upload:
    runs-on: ubuntu-latest
    name: Deploy Upload
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@1.3.0
        with:
          environment: production
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "./packages/upload"
      - name: Create Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: upload
        with:
          environment: production
          sourcemaps: "./packages/upload/dist"
  deploy-status:
    runs-on: ubuntu-latest
    name: Deploy Status
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@1.3.0
        with:
          environment: production
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "./packages/status"
      - name: Create Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: status
        with:
          environment: production
          sourcemaps: "./packages/status/dist"
  deploy-authentication:
    runs-on: ubuntu-latest
    name: Deploy Authentication Service
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@1.3.0
        with:
          environment: production
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "./packages/authentication"
      - name: Create Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: authentication
        with:
          environment: production
          sourcemaps: "./packages/authentication/dist"
  deploy-glenstack-com:
    runs-on: ubuntu-latest
    name: Deploy glenstack.com
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install
        run: npm ci
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@1.3.0
        with:
          environment: production
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "./packages/glenstack.com"
      - name: Create glenstack-com-worker Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: glenstack-com-worker
        with:
          environment: production
          sourcemaps: "./packages/glenstack.com/workers-site/dist"
      - name: Create glenstack-com Sentry release
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: glenstack
          SENTRY_PROJECT: glenstack-com
        with:
          environment: production
          sourcemaps: "./packages/glenstack.com/build/static/js"
          url_prefix: "~/static/js"
